//package model;
//
//import controller.BoardController;
//import java.util.ArrayList;
//import java.util.List;
//
//public class AIPlayerBehavior implements PlayerBehavior {
//    @Override
//    public int[] getNextMove(BoardController xoController) {
//        int size = xoController.getXOBoard().getSize();
//        char aiSymbol = xoController.getActualPlayer().getCurrentSymbol();
//        char opponentSymbol = (aiSymbol == 'X') ? 'O' : 'X';
//
//        // Lưu danh sách ô trống và điểm
//        List<int[]> emptyCells = new ArrayList<>();
//        List<Integer> scores = new ArrayList<>();
//
//        for (int i = 0; i < size; i++) {
//            for (int j = 0; j < size; j++) {
//                if (xoController.getXOBoard().getBoard().get(i).get(j) == ' ') {
//                    int score = evaluateCell(i, j, xoController, aiSymbol, opponentSymbol);
//                    emptyCells.add(new int[]{i, j});
//                    scores.add(score);
//                }
//            }
//        }
//
//        // Chọn ô có điểm cao nhất
//        int maxScore = Integer.MIN_VALUE;
//        int[] bestMove = emptyCells.get(0);
//        for (int i = 0; i < scores.size(); i++) {
//            if (scores.get(i) > maxScore) {
//                maxScore = scores.get(i);
//                bestMove = emptyCells.get(i);
//            }
//        }
//
//        return bestMove;
//    }
//
//    private int evaluateCell(int row, int col, BoardController xoController, char aiSymbol, char opponentSymbol) {
//        int size = xoController.getXOBoard().getSize();
//        int score = 0;
//
//        // 1. Kiểm tra nước thắng ngay
//        xoController.getXOBoard().getBoard().get(row).set(col, aiSymbol);
//        if (xoController.checkWinCondition(row, col)) {
//            xoController.getXOBoard().getBoard().get(row).set(col, ' ');
//            return 1000;
//        }
//        xoController.getXOBoard().getBoard().get(row).set(col, ' ');
//
//        // 2. Kiểm tra chặn đối thủ
//        xoController.getXOBoard().getBoard().get(row).set(col, opponentSymbol);
//        if (xoController.checkWinCondition(row, col)) {
//            xoController.getXOBoard().getBoard().get(row).set(col, ' ');
//            return 500;
//        }
//        xoController.getXOBoard().getBoard().get(row).set(col, ' ');
//
//        // 3. Đánh giá tiềm năng thắng (hàng, cột, đường chéo)
//        score += evaluateLine(row, col, 0, 1, xoController, aiSymbol, opponentSymbol); // Hàng
//        score += evaluateLine(row, col, 1, 0, xoController, aiSymbol, opponentSymbol); // Cột
//        score += evaluateLine(row, col, 1, 1, xoController, aiSymbol, opponentSymbol); // Đường chéo chính
//        score += evaluateLine(row, col, 1, -1, xoController, aiSymbol, opponentSymbol); // Đường chéo phụ
//
//        // 4. Ưu tiên vị trí
//        int center = size / 2;
//        if (row == center && col == center) {
//            score += 50; // Trung tâm
//        } else if ((row == 0 || row == size - 1) && (col == 0 || col == size - 1)) {
//            score += 30; // Góc
//        } else if (row == center || col == center) {
//            score += 20; // Cạnh gần trung tâm
//        }
//
//        return score;
//    }